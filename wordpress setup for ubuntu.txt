# first create script file

step:1

nano lemp.sh
================================================
 copy the content:
----------------

 sudo apt-get update
 sudo apt-get install nginx -y
 sudo apt-get install mysql-server -y
 sudo apt-get install php -y
 sudo apt-get install php8.1-fpm -y
 sudo service nginx start
 sudo service mysql start
 sudo service php8.1-fpm start
 sudo service nginx restart
 sudo service mysql restart
 sudo service php8.1-fpm restart
 cd /usr/share/nginx/html

--------------------------------
sudo chmod 777 lemp.sh
./lemp.sh

step:2

now change the configuration file

sudo nano /etc/nginx/sites-enabled/default

copy the hole file:
-------------------------
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /usr/share/nginx/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.php index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/run/php/php8.1-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
---------------------------------------------

due to configurational changes 
run following command
./lemp.sh

step:3

now install wordpress in html directory

cd /usr/share/nginx/html

sudo wget https://wordpress.org/latest.tar.gz

unzip file:

sudo tar -xzvf latest.tar.gz

give all permissions:

sudo chmod -R 777 wordpress

step:4
 make sure you are in working diractory as /home/ubuntu
 so do command:

 cd
 
 and the create one databse for wordpress in our mysql
 first lets atler user name and password:
  
 sudo mysql
   
 in mysql do following commands:
  
 alter user 'root'@'localhost' identified with MySQL_native_password 'pass@123';
 exit;
 
cheack for passowrd:
 sudo mysql -u root -p 
 enter password:
 
after validating lets make one database:
 create database wordpressdb;
 exit;
 
step:5
relaod the lemp.sh file 

./lemp.sh

for connection between mysql and wordpress install composer
 
sudo apt-get install php8.1-mysql -y

once again relaod

./lemp.sh



step:6 

 open browser and copy public ip

 enter in browser as:

 public_ip/wordpress


